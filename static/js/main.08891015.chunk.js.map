{"version":3,"sources":["components/calendar-modal/calendar-modal.js","components/calendar-modal/index.js","components/popper/popper.js","components/popper/index.js","components/app/index.js","components/app/App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","position","top","left","transform","width","backgroundColor","palette","background","borderRadius","boxShadow","shadows","padding","spacing","outline","button","margin","textField","marginLeft","marginRight","initialState","eventName","eventTime","eventDescription","BlogHeader","_ref","isOpen","cancelAddEvent","currentDay","addEvent","classes","_useState","useState","_useState2","Object","slicedToArray","_useState2$","setState","handleChange","e","_e$target","target","name","value","prevState","objectSpread","defineProperty","react_default","a","createElement","Modal","open","className","onSubmit","preventDefault","TextField","id","required","label","onChange","type","InputLabelProps","shrink","inputProps","step","Button","variant","color","onClick","typography","SimplePopper","currentEl","currentEventTitle","Popper","anchorEl","transition","_ref2","TransitionProps","Fade","assign","timeout","Paper","Typography","App","calendarComponentRef","React","createRef","state","isPopperOpen","calendarWeekends","calendarEvents","title","start","Date","rendering","handleEventClick","info","_this","el","event","handleDateClick","dateStr","date","time","description","concat","toConsumableArray","_this$state","this","components_calendar_modal","popper","main_esm","defaultView","header","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ref","events","dateClick","eventClick","Component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.08891015.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './calendar-modal.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n    width: 220,\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 5,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 4),\r\n    outline: 'none'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\nconst initialState = {\r\n  eventName: '',\r\n  eventTime: '',\r\n  eventDescription: ''\r\n};\r\n\r\nconst CalendarModal = ({ isOpen, cancelAddEvent, currentDay, addEvent }) => {\r\n  const classes = useStyles();\r\n\r\n  const [{ eventName, eventTime, eventDescription }, setState] = useState(\r\n    initialState\r\n  );\r\n\r\n  const clearState = () => {\r\n    setState({ ...initialState });\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addEvent(currentDay, eventName, eventTime, eventDescription);\r\n    clearState();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <Modal open={isOpen}>\r\n      <div className={classes.paper}>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id='eventname'\r\n            required\r\n            label='Event name'\r\n            margin='normal'\r\n            name='eventName'\r\n            value={eventName}\r\n            className={classes.textField}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id='description'\r\n            required\r\n            label='Event description'\r\n            margin='normal'\r\n            name='eventDescription'\r\n            value={eventDescription}\r\n            className={classes.textField}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            id='time'\r\n            label='Event time'\r\n            type='time'\r\n            name='eventTime'\r\n            margin='normal'\r\n            className={classes.textField}\r\n            onChange={handleChange}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            inputProps={{\r\n              step: 300\r\n            }}\r\n          />\r\n          <div className='btn-group'>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.button}\r\n              onClick={cancelAddEvent}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.button}\r\n              type='submit'\r\n            >\r\n              Apply\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import BlogHeader from './calendar-modal';\r\n\r\nexport default BlogHeader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function SimplePopper({ open, currentEl, currentEventTitle }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Popper className='pop' open={open} anchorEl={currentEl} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>\r\n                {currentEventTitle}\r\n              </Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","import SimplePopper from './popper';\r\n\r\nexport default SimplePopper;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport CalendarModal from '../calendar-modal';\r\nimport SimplePopper from '../popper';\r\n\r\nimport './App.css';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nclass App extends Component {\r\n  calendarComponentRef = React.createRef();\r\n\r\n  state = {\r\n    isOpen: false,\r\n    isPopperOpen: false,\r\n    currentEl: null,\r\n    currentEventTitle: '',\r\n    currentDay: null,\r\n    calendarWeekends: true,\r\n    calendarEvents: [\r\n      { title: 'Event Now', start: new Date(), rendering: 'test title todo' }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isOpen,\r\n      isPopperOpen,\r\n      currentDay,\r\n      calendarEvents,\r\n      currentEventTitle,\r\n      currentEl\r\n    } = this.state;\r\n    return (\r\n      <div className='wrapper'>\r\n        <CalendarModal\r\n          isOpen={isOpen}\r\n          cancelAddEvent={this.cancelAddEvent}\r\n          currentDay={currentDay}\r\n          addEvent={this.addEvent}\r\n        />\r\n        <SimplePopper\r\n          open={isPopperOpen}\r\n          currentEl={currentEl}\r\n          currentEventTitle={currentEventTitle}\r\n        />\r\n        <div className='demo-app'>\r\n          <div className='demo-app-top' />\r\n          <div className='demo-app-calendar'>\r\n            <FullCalendar\r\n              defaultView='dayGridMonth'\r\n              header={{\r\n                left: 'prev,next today',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n              }}\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n              ref={this.calendarComponentRef}\r\n              events={calendarEvents}\r\n              dateClick={this.handleDateClick}\r\n              eventClick={this.handleEventClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleEventClick = info => {\r\n    this.setState(state => {\r\n      return {\r\n        isPopperOpen: !state.isPopperOpen,\r\n        currentEl: info.el,\r\n        currentEventTitle: info.event.rendering\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDateClick = info => {\r\n    this.setState({\r\n      isOpen: true,\r\n      currentDay: info.dateStr\r\n    });\r\n  };\r\n\r\n  addEvent = (date, title, time, description) => {\r\n    this.setState({\r\n      isOpen: false,\r\n      calendarEvents: [\r\n        ...this.state.calendarEvents,\r\n        {\r\n          start: `${date} ${time}:00`,\r\n          rendering: description,\r\n          title\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  cancelAddEvent = () => {\r\n    this.setState(state => {\r\n      return { isOpen: !state.isOpen };\r\n    });\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}